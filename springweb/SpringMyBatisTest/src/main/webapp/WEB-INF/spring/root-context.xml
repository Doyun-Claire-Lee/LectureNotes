<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 
		MyBatis 설정
	-->
	
	<!-- 
		 - JDBC : Connection
		 - Spring-JDBC : DriverManagerDataSource
		 - MyBatis : BasicDataSource
	 -->	
	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="hr"></property>
		<property name="password" value="java1234"></property>
	</bean>
	<!-- 
		 - JDBC : X
		 - Spring-JDBC : X
		 - MyBatis : SqlSessionFactoryBean
	 -->	
	<bean id="sessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource"></property>	<!-- 위에 만들었던 connection역할 객체를 의존주입 -->
		<property name="mapperLocations" value="classpath*:com/test/spring/mapper/*.xml"></property> <!-- classpath*: : src/main/java -->
		<property name="configLocation" value="/WEB-INF/mybatis.xml"></property>
	</bean>
	<!-- 
		 - JDBC : Statement + ResultSet
		 - Spring-JDBC : JdbcTemplate
		 - MyBatis : SqlSessionTemplate
	 -->	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sessionfactory"></constructor-arg> <!-- 위에 만들었던 중간 역할 객체를 생성자 의존주입 -->
	</bean>
	
	<!-- 
		SessionTemplate을 만드는 순간 생성자를 통해 sessionfactory 객체가 만들어지고, 
		sessionfactory가 만들어지기 전 의존주입을 통해 datasource객체가 연쇄적으로 만들어짐. 
		=> 세 개의 Bean을 한몸이라 생각하기
	-->
		
</beans>
